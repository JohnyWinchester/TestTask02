// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestTask02Matveew.DAL.Context;

#nullable disable

namespace TestTask02Matveew.DAL.Migrations
{
    [DbContext(typeof(TestTask02MatveewDB))]
    partial class TestTask02MatveewDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TestTask02Matveew.Domain.Coordinate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Client")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CoordinateX")
                        .HasColumnType("int");

                    b.Property<int>("CoordinateY")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Coordinates", t =>
                        {
                            t.HasCheckConstraint("Client", "Client = 'X' OR Client = '0'");

                            t.HasCheckConstraint("CoordinateX", "CoordinateX > 0 AND CoordinateX < 4");

                            t.HasCheckConstraint("CoordinateY", "CoordinateY > 0 AND CoordinateY < 4");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
